- name: Deploy to EC2 - last homework for DevOps
  hosts: localhost
  connection: local

  tasks:
    - name: Identify running instances for termination
      ec2_instance_info:
        region: us-east-1
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        security_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
      register: ec2_stat
    - name: Launch EC2 instance
      ec2:
        instance_type: t2.micro
        image: ami-013f17f36f8b1fefb
        region: us-east-1
        key_name: devops
        vpc_subnet_id: subnet-b38facbd
        assign_public_ip: yes
        wait: yes
        count: 1
        group: homework
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        security_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from Git
      git:
        repo: 'https://github.com/oliba97/4IT572_final.git'
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 100
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Terminate instances
  hosts: localhost
  connection: local

  tasks:
   - name: Terminate running instances
     ec2:
       region: us-east-1
       state: absent
       aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
       aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
       security_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
       instance_ids: '{{ item.instance_id }}'
     loop: "{{ ec2_stat.instances }}"
     loop_control:
       label: "{{ item.instance_id }}"